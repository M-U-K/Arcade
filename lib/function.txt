arcade::Window *create_window(unsigned int width, unsigned int height, std::string title);
void disp_window(arcade::Window *window);
void delete_window(arcade::Window *window);
arcade::load window_isopen(arcade::Window *window);

bool check_key(arcade::Window *window, arcade::key key);

arcade::Scene *create_scene(arcade::Window *window, float width, float height, std::string name);
void pause_scene(arcade::Scene *scene, arcade::pause pause);
void load_scene(arcade::Scene *scene, arcade::load load);
void delete_scene(arcade::Scene *scene);
void disp_scene(arcade::Scene *scene, arcade::Window *window);
void set_scene_color(arcade::Scene *scene, arcade::color color);
void set_scene_position(arcade::Scene *scene, std::pair<float, float> pos);
arcade::color get_scene_color(arcade::Scene *scene);
std::pair <float, float> get_scene_position(arcade::Scene *scene);

arcade::Rect *create_rect(arcade::Scene *scene, float width, float height);
void delete_rect(arcade::Scene *scene);
void load_rect(arcade::Rect *rect, arcade::load load);
void set_rect_position(arcade::Rect *rect, std::pair<float, float> pos);
void set_rect_color(arcade::Rect *rect, arcade::color color);
void set_rect_size(arcade::Rect *rect, std::pair<float, float> size);
std::pair <float, float> get_rect_position(arcade::Rect *rect);
arcade::color get_rect_color(arcade::Rect *rect);
std::pair <float, float> get_rect_size(arcade::Rect *rect);


arcade::Text *create_text(arcade::Scene *scene, std::string content, unsigned int size, std::string font);
void pause_text(arcade::Text *text, arcade::pause pause);
void load_text(arcade::Text *text, arcade::load load);
void delete_text(arcade::Text *text);
void set_text_content(arcade::Text *text, std::string content);
void set_text_position(arcade::Text *text, std::pair<float, float> pos);
//void set_text_rotation(arcade::Text *text, float angle);
//void set_text_scale(arcade::Text *text, std::pair<float, float> scale);
void set_text_color(arcade::Text *text, arcade::color color);
//void set_text_font(arcade::Text *text, std::string font_path);
std::string get_text_content(arcade::Text *text);
std::pair <float, float> get_text_position(arcade::Text *text);
//float get_text_rotation(arcade::Text *text);
//std::pair <float, float> get_text_scale(arcade::Text *text);
arcade::color get_text_color(arcade::Text *text);

arcade::Time *create_time(arcade::Window *window);
unsigned long get_time(arcade::Time *time);
void reset_time(arcade::Time *time);

